import { View, Text, TouchableOpacity, SafeAreaView, ScrollView } from "react-native"
import { styles } from "../../styles/styles"
import { adminStats, adminMenuItems } from "../../data/mockData"
import { AdminBottomNav } from "../../components/BottomNavigation"

const AdminDashboardScreen = ({ onTabPress, onMenuPress, currentUser }) => {
  const renderMenuItem = ({ item }) => (
    <TouchableOpacity style={styles.adminMenuCard} onPress={() => onMenuPress && onMenuPress(item.screen)}>
      <Text style={styles.adminMenuIcon}>{item.icon}</Text>
      <Text style={styles.adminMenuTitle}>{item.title}</Text>
      <Text style={styles.adminMenuDescription}>
        {item.action === "users" && "Qu·∫£n l√Ω t√†i kho·∫£n ng∆∞·ªùi d√πng"}
        {item.action === "services" && "Qu·∫£n l√Ω danh m·ª•c d·ªãch v·ª•"}
        {item.action === "orders" && "Theo d√µi ƒë∆°n h√†ng"}
        {item.action === "reports" && "Xem b√°o c√°o th·ªëng k√™"}
        {item.action === "settings" && "C·∫•u h√¨nh h·ªá th·ªëng"}
        {item.action === "support" && "H·ªó tr·ª£ kh√°ch h√†ng"}
      </Text>
    </TouchableOpacity>
  )

  return (
    <SafeAreaView style={styles.container}>
      <View style={styles.adminHeader}>
        <View>
          <Text style={styles.adminTitle}>Admin Dashboard</Text>
          <Text style={styles.adminSubtitle}>Xin ch√†o, {currentUser?.name || "Admin"}</Text>
        </View>
        <TouchableOpacity style={styles.notificationButton}>
          <Text style={styles.notificationIcon}>üîî</Text>
          <View style={styles.notificationBadge}>
            <Text style={styles.notificationCount}>5</Text>
          </View>
        </TouchableOpacity>
      </View>

      <ScrollView showsVerticalScrollIndicator={false}>
        {/* Stats Grid */}
        <View style={styles.adminStatsGrid}>
          <View style={styles.adminStatCard}>
            <Text style={styles.adminStatIcon}>üë•</Text>
            <Text style={styles.adminStatNumber}>{adminStats.totalUsers}</Text>
            <Text style={styles.adminStatLabel}>T·ªïng ng∆∞·ªùi d√πng</Text>
          </View>
          <View style={styles.adminStatCard}>
            <Text style={styles.adminStatIcon}>üîß</Text>
            <Text style={styles.adminStatNumber}>{adminStats.totalWorkers}</Text>
            <Text style={styles.adminStatLabel}>Th·ª£ s·ª≠a ch·ªØa</Text>
          </View>
          <View style={styles.adminStatCard}>
            <Text style={styles.adminStatIcon}>üìã</Text>
            <Text style={styles.adminStatNumber}>{adminStats.totalOrders}</Text>
            <Text style={styles.adminStatLabel}>T·ªïng ƒë∆°n h√†ng</Text>
          </View>
          <View style={styles.adminStatCard}>
            <Text style={styles.adminStatIcon}>üí∞</Text>
            <Text style={styles.adminStatNumber}>{(adminStats.totalRevenue / 1000000).toFixed(1)}M</Text>
            <Text style={styles.adminStatLabel}>Doanh thu (VNƒê)</Text>
          </View>
        </View>

        {/* Quick Stats */}
        <View style={styles.section}>
          <Text style={styles.sectionTitle}>Th·ªëng k√™ nhanh</Text>
          <View style={styles.quickStatsContainer}>
            <View style={styles.quickStatItem}>
              <Text style={styles.quickStatNumber}>{adminStats.completedOrders}</Text>
              <Text style={styles.quickStatLabel}>ƒê∆°n ho√†n th√†nh</Text>
            </View>
            <View style={styles.quickStatItem}>
              <Text style={styles.quickStatNumber}>{adminStats.pendingOrders}</Text>
              <Text style={styles.quickStatLabel}>ƒê∆°n ch·ªù x·ª≠ l√Ω</Text>
            </View>
            <View style={styles.quickStatItem}>
              <Text style={styles.quickStatNumber}>{(adminStats.monthlyRevenue / 1000000).toFixed(1)}M</Text>
              <Text style={styles.quickStatLabel}>Doanh thu th√°ng</Text>
            </View>
          </View>
        </View>

        {/* Menu Grid */}
        <View style={styles.section}>
          <Text style={styles.sectionTitle}>Qu·∫£n l√Ω h·ªá th·ªëng</Text>
          <View style={styles.adminMenuGrid}>
            {adminMenuItems.map((item) => (
              <TouchableOpacity
                key={item.id}
                style={styles.adminMenuCard}
                onPress={() => {
                  console.log("Menu pressed:", item.screen)
                  if (onMenuPress) {
                    onMenuPress(item.screen)
                  }
                }}
              >
                <Text style={styles.adminMenuIcon}>{item.icon}</Text>
                <Text style={styles.adminMenuTitle}>{item.title}</Text>
              </TouchableOpacity>
            ))}
          </View>
        </View>
      </ScrollView>

      <AdminBottomNav onTabPress={onTabPress} activeTab="adminDashboard" />
    </SafeAreaView>
  )
}

export default AdminDashboardScreen
