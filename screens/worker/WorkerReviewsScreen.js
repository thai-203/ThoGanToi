import { useState } from "react";
import {
  View,
  Text,
  TouchableOpacity,
  SafeAreaView,
  ScrollView,
  Alert,
} from "react-native";
import { styles } from "../../styles/additional";
import { WorkerBottomNav } from "../../components/BottomNavigation";

const WorkerReviewsScreen = ({ onTabPress, onBack }) => {
  const [activeFilter, setActiveFilter] = useState("all");

  const filters = [
    { id: "all", label: "T·∫•t c·∫£", count: 127 },
    { id: "5star", label: "5 sao", count: 89 },
    { id: "4star", label: "4 sao", count: 25 },
    { id: "3star", label: "3 sao", count: 8 },
    { id: "recent", label: "G·∫ßn ƒë√¢y", count: 15 },
  ];

  const reviews = [
    {
      id: 1,
      customerName: "Nguy·ªÖn VƒÉn A",
      customerAvatar: "üë§",
      rating: 5,
      date: "2 ng√†y tr∆∞·ªõc",
      service: "S·ª≠a ch·ªØa ƒëi·ªán",
      comment:
        "Th·ª£ l√†m vi·ªác r·∫•t chuy√™n nghi·ªáp, nhanh ch√≥ng v√† s·∫°ch s·∫Ω. Gi√° c·∫£ h·ª£p l√Ω, s·∫Ω g·ªçi l·∫°i l·∫ßn sau.",
      orderId: "#DH001234",
      helpful: 3,
      hasImages: true,
    },
    {
      id: 2,
      customerName: "Tr·∫ßn Th·ªã B",
      customerAvatar: "üë©",
      rating: 5,
      date: "5 ng√†y tr∆∞·ªõc",
      service: "L·∫Øp ƒë·∫∑t thi·∫øt b·ªã",
      comment:
        "R·∫•t h√†i l√≤ng v·ªõi d·ªãch v·ª•. Th·ª£ ƒë·∫øn ƒë√∫ng gi·ªù, l√†m vi·ªác c·∫©n th·∫≠n v√† t∆∞ v·∫•n nhi·ªát t√¨nh.",
      orderId: "#DH001235",
      helpful: 5,
      hasImages: false,
    },
    {
      id: 3,
      customerName: "L√™ VƒÉn C",
      customerAvatar: "üë®",
      rating: 4,
      date: "1 tu·∫ßn tr∆∞·ªõc",
      service: "B·∫£o tr√¨ h·ªá th·ªëng",
      comment:
        "C√¥ng vi·ªác ƒë∆∞·ª£c ho√†n th√†nh t·ªët, tuy nhi√™n th·ªùi gian h∆°i l√¢u so v·ªõi d·ª± ki·∫øn.",
      orderId: "#DH001236",
      helpful: 2,
      hasImages: true,
    },
  ];

  const ratingDistribution = [
    { stars: 5, count: 89, percentage: 70 },
    { stars: 4, count: 25, percentage: 20 },
    { stars: 3, count: 8, percentage: 6 },
    { stars: 2, count: 3, percentage: 2 },
    { stars: 1, count: 2, percentage: 2 },
  ];

  const handleReply = (reviewId) => {
    Alert.alert(
      "Tr·∫£ l·ªùi ƒë√°nh gi√°",
      "T√≠nh nƒÉng tr·∫£ l·ªùi ƒë√°nh gi√° ƒëang ƒë∆∞·ª£c ph√°t tri·ªÉn"
    );
  };

  const renderStars = (rating) => {
    return "‚≠ê".repeat(rating) + "‚òÜ".repeat(5 - rating);
  };

  return (
    <SafeAreaView style={styles.container}>
      <View style={styles.screenHeader}>
        <TouchableOpacity onPress={onBack}>
          <Text style={styles.backButton}>‚Üê Quay l·∫°i</Text>
        </TouchableOpacity>
        <Text style={styles.screenTitle}>ƒê√°nh gi√° t·ª´ kh√°ch h√†ng</Text>
        <View style={styles.headerRight}>
          <Text style={styles.reviewCount}>127 ƒë√°nh gi√°</Text>
        </View>
      </View>

      <ScrollView style={styles.reviewsContent}>
        {/* Overall Rating */}
        <View style={styles.overallRatingSection}>
          <Text style={styles.sectionTitle}>T·ªïng quan ƒë√°nh gi√°</Text>
          <View style={styles.overallRatingCard}>
            <View style={styles.overallRatingLeft}>
              <Text style={styles.overallRatingNumber}>4.8</Text>
              <Text style={styles.overallRatingStars}>‚≠ê‚≠ê‚≠ê‚≠ê‚≠ê</Text>
              <Text style={styles.overallRatingText}>127 ƒë√°nh gi√°</Text>
            </View>
            <View style={styles.overallRatingRight}>
              {ratingDistribution.map((item) => (
                <View key={item.stars} style={styles.ratingDistributionRow}>
                  <Text style={styles.ratingDistributionStars}>
                    {item.stars}‚≠ê
                  </Text>
                  <View style={styles.ratingDistributionBar}>
                    <View
                      style={[
                        styles.ratingDistributionFill,
                        { width: `${item.percentage}%` },
                      ]}
                    />
                  </View>
                  <Text style={styles.ratingDistributionCount}>
                    {item.count}
                  </Text>
                </View>
              ))}
            </View>
          </View>
        </View>

        {/* Filter Tabs */}
        <View style={styles.reviewFilterTabs}>
          {filters.map((filter) => (
            <TouchableOpacity
              key={filter.id}
              style={[
                styles.reviewFilterTab,
                activeFilter === filter.id && styles.activeReviewFilterTab,
              ]}
              onPress={() => setActiveFilter(filter.id)}
            >
              <Text
                style={[
                  styles.reviewFilterTabText,
                  activeFilter === filter.id &&
                    styles.activeReviewFilterTabText,
                ]}
              >
                {filter.label} ({filter.count})
              </Text>
            </TouchableOpacity>
          ))}
        </View>

        {/* Reviews List */}
        <View style={styles.reviewsList}>
          {reviews.map((review) => (
            <View key={review.id} style={styles.reviewCard}>
              <View style={styles.reviewHeader}>
                <View style={styles.reviewCustomerInfo}>
                  <Text style={styles.reviewCustomerAvatar}>
                    {review.customerAvatar}
                  </Text>
                  <View style={styles.reviewCustomerDetails}>
                    <Text style={styles.reviewCustomerName}>
                      {review.customerName}
                    </Text>
                    <Text style={styles.reviewDate}>{review.date}</Text>
                  </View>
                </View>
                <TouchableOpacity style={styles.reviewMenuButton}>
                  <Text style={styles.reviewMenuIcon}>‚ãÆ</Text>
                </TouchableOpacity>
              </View>

              <View style={styles.reviewRating}>
                <Text style={styles.reviewStars}>
                  {renderStars(review.rating)}
                </Text>
                <Text style={styles.reviewService}>‚Ä¢ {review.service}</Text>
              </View>

              <Text style={styles.reviewComment}>{review.comment}</Text>

              {review.hasImages && (
                <View style={styles.reviewImages}>
                  <View style={styles.reviewImagePlaceholder}>
                    <Text style={styles.reviewImageIcon}>üñºÔ∏è</Text>
                  </View>
                  <View style={styles.reviewImagePlaceholder}>
                    <Text style={styles.reviewImageIcon}>üñºÔ∏è</Text>
                  </View>
                </View>
              )}

              <View style={styles.reviewFooter}>
                <View style={styles.reviewMeta}>
                  <Text style={styles.reviewOrderId}>
                    ƒê∆°n h√†ng: {review.orderId}
                  </Text>
                  <Text style={styles.reviewHelpful}>
                    {review.helpful} ng∆∞·ªùi th·∫•y h·ªØu √≠ch
                  </Text>
                </View>
                <TouchableOpacity
                  style={styles.replyButton}
                  onPress={() => handleReply(review.id)}
                >
                  <Text style={styles.replyButtonText}>Tr·∫£ l·ªùi</Text>
                </TouchableOpacity>
              </View>
            </View>
          ))}
        </View>

        {/* Tips Section */}
        <View style={styles.reviewTipsSection}>
          <View style={styles.reviewTips}>
            <Text style={styles.reviewTipsTitle}>
              üí° M·∫πo c·∫£i thi·ªán ƒë√°nh gi√°
            </Text>
            <Text style={styles.reviewTipsText}>
              ‚Ä¢ Lu√¥n ƒë·∫øn ƒë√∫ng gi·ªù v√† th√¥ng b√°o tr∆∞·ªõc n·∫øu c√≥ thay ƒë·ªïi{"\n"}‚Ä¢ L√†m
              vi·ªác c·∫©n th·∫≠n, s·∫°ch s·∫Ω v√† chuy√™n nghi·ªáp{"\n"}‚Ä¢ T∆∞ v·∫•n v√† gi·∫£i
              th√≠ch r√µ r√†ng cho kh√°ch h√†ng{"\n"}‚Ä¢ Tr·∫£ l·ªùi ƒë√°nh gi√° m·ªôt c√°ch l·ªãch
              s·ª± v√† ch√¢n th√†nh
            </Text>
          </View>
        </View>
      </ScrollView>

      <WorkerBottomNav onTabPress={onTabPress} activeTab="workerProfile" />
    </SafeAreaView>
  );
};

export default WorkerReviewsScreen;
