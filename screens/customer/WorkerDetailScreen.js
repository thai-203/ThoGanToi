import { useState } from "react"
import { View, Text, TouchableOpacity, SafeAreaView, ScrollView, Alert } from "react-native"
import { styles } from "../../styles/styles"
import { dates, times } from "../../data/mockData"
import { CustomerBottomNav } from "../../components/BottomNavigation"

const WorkerDetailScreen = ({ worker, service, onBack, onTabPress }) => {
  const [selectedDate, setSelectedDate] = useState("")
  const [selectedTime, setSelectedTime] = useState("")

  const handleBooking = () => {
    if (!selectedDate || !selectedTime) {
      Alert.alert("Th√¥ng b√°o", "Vui l√≤ng ch·ªçn ng√†y v√† gi·ªù")
      return
    }
    Alert.alert(
      "X√°c nh·∫≠n ƒë·∫∑t l·ªãch",
      `ƒê·∫∑t l·ªãch v·ªõi ${worker.name}\nD·ªãch v·ª•: ${service.name}\nNg√†y: ${selectedDate}\nGi·ªù: ${selectedTime}`,
      [
        { text: "H·ªßy", style: "cancel" },
        {
          text: "X√°c nh·∫≠n",
          onPress: () => {
            Alert.alert("Th√†nh c√¥ng", "ƒê·∫∑t l·ªãch th√†nh c√¥ng!")
            onBack()
          },
        },
      ],
    )
  }

  const handleCall = () => {
    Alert.alert("G·ªçi ƒëi·ªán", `G·ªçi cho ${worker.name}: ${worker.phone}`)
  }

  return (
    <SafeAreaView style={styles.container}>
      <View style={styles.screenHeader}>
        <TouchableOpacity onPress={onBack}>
          <Text style={styles.backButton}>‚Üê Quay l·∫°i</Text>
        </TouchableOpacity>
        <Text style={styles.screenTitle}>Chi ti·∫øt th·ª£</Text>
        <TouchableOpacity>
          <Text style={styles.favoriteButton}>‚ù§Ô∏è</Text>
        </TouchableOpacity>
      </View>
      <ScrollView style={styles.detailContent}>
        <View style={styles.workerProfile}>
          <Text style={styles.detailAvatar}>{worker.avatar}</Text>
          <Text style={styles.detailWorkerName}>{worker.name}</Text>
          <Text style={styles.detailExperience}>{worker.experience}</Text>
          <View style={styles.detailRatingContainer}>
            <Text style={styles.detailRating}>‚≠ê {worker.rating}</Text>
            <Text style={styles.detailReviews}>({worker.reviews} ƒë√°nh gi√°)</Text>
          </View>
          <Text style={styles.detailPrice}>{worker.price}</Text>
        </View>
        <View style={styles.section}>
          <Text style={styles.sectionTitle}>V·ªÅ t√¥i</Text>
          <Text style={styles.description}>
            T√¥i l√† th·ª£ {service.name.toLowerCase()} v·ªõi {worker.experience}. Cam k·∫øt l√†m vi·ªác chuy√™n nghi·ªáp, t·∫≠n t√¢m v√†
            ƒë·∫£m b·∫£o ch·∫•t l∆∞·ª£ng. Ph·ª•c v·ª• 24/7, c√≥ th·ªÉ ƒë·∫øn t·∫≠n n∆°i trong v√≤ng 30 ph√∫t.
          </Text>
        </View>
        <View style={styles.section}>
          <Text style={styles.sectionTitle}>D·ªãch v·ª•</Text>
          <View style={styles.servicesList}>
            <Text style={styles.serviceItem}>‚Ä¢ S·ª≠a ch·ªØa, b·∫£o tr√¨</Text>
            <Text style={styles.serviceItem}>‚Ä¢ L·∫Øp ƒë·∫∑t m·ªõi</Text>
            <Text style={styles.serviceItem}>‚Ä¢ T∆∞ v·∫•n k·ªπ thu·∫≠t</Text>
            <Text style={styles.serviceItem}>‚Ä¢ B·∫£o h√†nh 6 th√°ng</Text>
          </View>
        </View>
        <View style={styles.section}>
          <Text style={styles.sectionTitle}>Ch·ªçn ng√†y</Text>
          <View style={styles.dateContainer}>
            {dates.map((date) => (
              <TouchableOpacity
                key={date.id}
                style={[styles.dateButton, selectedDate === date.value && styles.selectedDate]}
                onPress={() => setSelectedDate(date.value)}
              >
                <Text style={[styles.dateText, selectedDate === date.value && styles.selectedDateText]}>
                  {date.label}
                </Text>
              </TouchableOpacity>
            ))}
          </View>
        </View>
        <View style={styles.section}>
          <Text style={styles.sectionTitle}>Ch·ªçn gi·ªù</Text>
          <View style={styles.timeContainer}>
            {times.map((time) => (
              <TouchableOpacity
                key={time}
                style={[styles.timeButton, selectedTime === time && styles.selectedTime]}
                onPress={() => setSelectedTime(time)}
              >
                <Text style={[styles.timeText, selectedTime === time && styles.selectedTimeText]}>{time}</Text>
              </TouchableOpacity>
            ))}
          </View>
        </View>
      </ScrollView>
      <View style={styles.detailFooter}>
        <TouchableOpacity style={styles.callButton} onPress={handleCall}>
          <Text style={styles.callButtonText}>üìû G·ªçi</Text>
        </TouchableOpacity>
        <TouchableOpacity style={styles.bookButton} onPress={handleBooking}>
          <Text style={styles.bookButtonText}>ƒê·∫∑t l·ªãch ngay</Text>
        </TouchableOpacity>
      </View>
      <CustomerBottomNav onTabPress={onTabPress} activeTab="home" />
    </SafeAreaView>
  )
}

export default WorkerDetailScreen
