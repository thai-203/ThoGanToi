import { useState } from "react";
import {
  View,
  Text,
  TouchableOpacity,
  SafeAreaView,
  ScrollView,
  Alert,
  TextInput,
  Switch,
} from "react-native";
import { styles } from "../../styles/styles";
import { AdminBottomNav } from "../../components/BottomNavigation";

const SystemSettingsScreen = ({ onTabPress, onBack }) => {
  const [appName, setAppName] = useState("Th·ª£ G·∫ßn T√¥i");
  const [contactEmail, setContactEmail] = useState("support@thogantoi.com");
  const [contactPhone, setContactPhone] = useState("1900-1234");
  const [pushNotifications, setPushNotifications] = useState(true);
  const [maintenanceMode, setMaintenanceMode] = useState(false);

  const handleUpdateAppInfo = () => {
    Alert.alert("C·∫≠p nh·∫≠t th√¥ng tin app", "ƒê√£ c·∫≠p nh·∫≠t th√¥ng tin ·ª©ng d·ª•ng");
  };

  const handleUpdatePolicies = () => {
    Alert.alert(
      "C·∫≠p nh·∫≠t ch√≠nh s√°ch",
      "Ch·ª©c nƒÉng ch·ªânh s·ª≠a ch√≠nh s√°ch ƒëang ƒë∆∞·ª£c ph√°t tri·ªÉn"
    );
  };

  const handleSendNotification = () => {
    Alert.prompt(
      "G·ª≠i th√¥ng b√°o",
      "Nh·∫≠p n·ªôi dung th√¥ng b√°o:",
      [
        { text: "H·ªßy", style: "cancel" },
        {
          text: "G·ª≠i",
          onPress: (message) => {
            if (message) {
              Alert.alert(
                "Th√†nh c√¥ng",
                "ƒê√£ g·ª≠i th√¥ng b√°o ƒë·∫øn t·∫•t c·∫£ ng∆∞·ªùi d√πng"
              );
            }
          },
        },
      ],
      "plain-text",
      "Th√¥ng b√°o t·ª´ h·ªá th·ªëng..."
    );
  };

  const handleBackupData = () => {
    Alert.alert(
      "Sao l∆∞u d·ªØ li·ªáu",
      "B·∫°n c√≥ ch·∫Øc mu·ªën sao l∆∞u to√†n b·ªô d·ªØ li·ªáu h·ªá th·ªëng?",
      [
        { text: "H·ªßy", style: "cancel" },
        {
          text: "Sao l∆∞u",
          onPress: () => {
            Alert.alert("Th√†nh c√¥ng", "ƒê√£ t·∫°o b·∫£n sao l∆∞u d·ªØ li·ªáu");
          },
        },
      ]
    );
  };

  const handleRestoreData = () => {
    Alert.alert(
      "Kh√¥i ph·ª•c d·ªØ li·ªáu",
      "B·∫°n c√≥ ch·∫Øc mu·ªën kh√¥i ph·ª•c d·ªØ li·ªáu t·ª´ b·∫£n sao l∆∞u?",
      [
        { text: "H·ªßy", style: "cancel" },
        {
          text: "Kh√¥i ph·ª•c",
          style: "destructive",
          onPress: () => {
            Alert.alert("Th√†nh c√¥ng", "ƒê√£ kh√¥i ph·ª•c d·ªØ li·ªáu t·ª´ b·∫£n sao l∆∞u");
          },
        },
      ]
    );
  };

  return (
    <SafeAreaView style={styles.container}>
      <View style={styles.screenHeader}>
        <TouchableOpacity onPress={onBack}>
          <Text style={styles.backButton}>‚Üê Quay l·∫°i</Text>
        </TouchableOpacity>
        <Text style={styles.screenTitle}>C√†i ƒë·∫∑t h·ªá th·ªëng</Text>
        <TouchableOpacity>
          <Text style={styles.filterButton}>‚öôÔ∏è</Text>
        </TouchableOpacity>
      </View>

      <ScrollView
        style={styles.settingsContent}
        showsVerticalScrollIndicator={false}
      >
        {/* App Information */}
        <View style={styles.settingsSection}>
          <Text style={styles.settingsSectionTitle}>Th√¥ng tin ·ª©ng d·ª•ng</Text>

          <View style={styles.settingsItem}>
            <Text style={styles.settingsLabel}>T√™n ·ª©ng d·ª•ng</Text>
            <TextInput
              style={styles.settingsInput}
              value={appName}
              onChangeText={setAppName}
              placeholder="T√™n ·ª©ng d·ª•ng"
            />
          </View>

          <View style={styles.settingsItem}>
            <Text style={styles.settingsLabel}>Email h·ªó tr·ª£</Text>
            <TextInput
              style={styles.settingsInput}
              value={contactEmail}
              onChangeText={setContactEmail}
              placeholder="Email h·ªó tr·ª£"
              keyboardType="email-address"
            />
          </View>

          <View style={styles.settingsItem}>
            <Text style={styles.settingsLabel}>Hotline</Text>
            <TextInput
              style={styles.settingsInput}
              value={contactPhone}
              onChangeText={setContactPhone}
              placeholder="S·ªë ƒëi·ªán tho·∫°i h·ªó tr·ª£"
              keyboardType="phone-pad"
            />
          </View>

          <TouchableOpacity
            style={styles.settingsButton}
            onPress={handleUpdateAppInfo}
          >
            <Text style={styles.settingsButtonText}>C·∫≠p nh·∫≠t th√¥ng tin</Text>
          </TouchableOpacity>
        </View>

        {/* System Settings */}
        <View style={styles.settingsSection}>
          <Text style={styles.settingsSectionTitle}>C√†i ƒë·∫∑t h·ªá th·ªëng</Text>

          <View style={styles.settingsToggleItem}>
            <View style={styles.settingsToggleInfo}>
              <Text style={styles.settingsToggleTitle}>Th√¥ng b√°o ƒë·∫©y</Text>
              <Text style={styles.settingsToggleSubtitle}>
                Cho ph√©p g·ª≠i th√¥ng b√°o ƒë·∫øn ng∆∞·ªùi d√πng
              </Text>
            </View>
            <Switch
              value={pushNotifications}
              onValueChange={setPushNotifications}
              trackColor={{ false: "#e5e7eb", true: "#10b981" }}
              thumbColor={pushNotifications ? "#ffffff" : "#f3f4f6"}
            />
          </View>

          <View style={styles.settingsToggleItem}>
            <View style={styles.settingsToggleInfo}>
              <Text style={styles.settingsToggleTitle}>Ch·∫ø ƒë·ªô b·∫£o tr√¨</Text>
              <Text style={styles.settingsToggleSubtitle}>
                T·∫°m d·ª´ng ho·∫°t ƒë·ªông c·ªßa ·ª©ng d·ª•ng
              </Text>
            </View>
            <Switch
              value={maintenanceMode}
              onValueChange={setMaintenanceMode}
              trackColor={{ false: "#e5e7eb", true: "#ef4444" }}
              thumbColor={maintenanceMode ? "#ffffff" : "#f3f4f6"}
            />
          </View>
        </View>

        {/* Policies */}
        <View style={styles.settingsSection}>
          <Text style={styles.settingsSectionTitle}>
            Ch√≠nh s√°ch & ƒëi·ªÅu kho·∫£n
          </Text>

          <TouchableOpacity
            style={styles.settingsMenuItem}
            onPress={handleUpdatePolicies}
          >
            <Text style={styles.settingsMenuIcon}>üìÑ</Text>
            <View style={styles.settingsMenuInfo}>
              <Text style={styles.settingsMenuTitle}>ƒêi·ªÅu kho·∫£n s·ª≠ d·ª•ng</Text>
              <Text style={styles.settingsMenuSubtitle}>
                Ch·ªânh s·ª≠a ƒëi·ªÅu kho·∫£n s·ª≠ d·ª•ng
              </Text>
            </View>
            <Text style={styles.settingsMenuArrow}>‚Ä∫</Text>
          </TouchableOpacity>

          <TouchableOpacity
            style={styles.settingsMenuItem}
            onPress={handleUpdatePolicies}
          >
            <Text style={styles.settingsMenuIcon}>üîí</Text>
            <View style={styles.settingsMenuInfo}>
              <Text style={styles.settingsMenuTitle}>Ch√≠nh s√°ch b·∫£o m·∫≠t</Text>
              <Text style={styles.settingsMenuSubtitle}>
                Ch·ªânh s·ª≠a ch√≠nh s√°ch b·∫£o m·∫≠t
              </Text>
            </View>
            <Text style={styles.settingsMenuArrow}>‚Ä∫</Text>
          </TouchableOpacity>
        </View>

        {/* Notifications */}
        <View style={styles.settingsSection}>
          <Text style={styles.settingsSectionTitle}>Th√¥ng b√°o</Text>

          <TouchableOpacity
            style={styles.settingsButton}
            onPress={handleSendNotification}
          >
            <Text style={styles.settingsButtonText}>
              üì¢ G·ª≠i th√¥ng b√°o t·ªõi t·∫•t c·∫£
            </Text>
          </TouchableOpacity>
        </View>

        {/* Data Management */}
        <View style={styles.settingsSection}>
          <Text style={styles.settingsSectionTitle}>Qu·∫£n l√Ω d·ªØ li·ªáu</Text>

          <TouchableOpacity
            style={styles.settingsButton}
            onPress={handleBackupData}
          >
            <Text style={styles.settingsButtonText}>üíæ Sao l∆∞u d·ªØ li·ªáu</Text>
          </TouchableOpacity>

          <TouchableOpacity
            style={[styles.settingsButton, styles.dangerButton]}
            onPress={handleRestoreData}
          >
            <Text style={[styles.settingsButtonText, styles.dangerButtonText]}>
              üîÑ Kh√¥i ph·ª•c d·ªØ li·ªáu
            </Text>
          </TouchableOpacity>
        </View>
      </ScrollView>

      <AdminBottomNav onTabPress={onTabPress} activeTab="systemSettings" />
    </SafeAreaView>
  );
};

export default SystemSettingsScreen;
